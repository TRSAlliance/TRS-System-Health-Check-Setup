name: TRS System Health Check
on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  schedule:
    - cron: '0 8 * * *'  # Daily at 8 AM UTC
  workflow_dispatch:  # Allow manual trigger

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi
          
      - name: Make health check script executable
        run: |
          if [ -f scripts/health-check.js ]; then
            chmod +x scripts/health-check.js
          elif [ -f Script ]; then
            chmod +x Script
            cp Script scripts/health-check.js
            mkdir -p scripts
          else
            echo "Health check script not found"
            exit 1
          fi
          
      - name: Run TRS Health Check
        run: |
          if [ -f scripts/health-check.js ]; then
            node scripts/health-check.js
          elif [ -f Script ]; then
            node Script
          else
            echo "No health check script found"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Health Report
        uses: actions/upload-artifact@v4  # Updated to v4
        if: always()
        with:
          name: trs-health-report-${{ github.run_number }}
          path: |
            health-check-*.json
            *.log
          retention-days: 30
          
      - name: Comment PR with Health Status
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const glob = require('glob');
            
            // Find the latest health check report
            const files = glob.sync('health-check-*.json');
            if (files.length === 0) {
              console.log('No health check report found');
              return;
            }
            
            const latestFile = files.sort().pop();
            const report = JSON.parse(fs.readFileSync(latestFile, 'utf8'));
            
            const healthEmoji = {
              'HEALTHY': '✅',
              'MOSTLY_HEALTHY': '⚠️', 
              'NEEDS_ATTENTION': '🚨',
              'CRITICAL': '🔴'
            };
            
            const emoji = healthEmoji[report.overall] || '❓';
            
            const body = `## ${emoji} TRS System Health Check
            
            **Overall Status:** ${report.overall}
            **Timestamp:** ${report.timestamp}
            
            ### Component Status
            ${Object.entries(report.components || {}).map(([name, data]) => 
              `- **${name}**: ${data.status || 'UNKNOWN'}`
            ).join('\n')}
            
            ### Integration Status  
            ${Object.entries(report.integrations || {}).map(([name, data]) =>
              `- **${name}**: ${data.success ? '✅ CONNECTED' : '❌ FAILED'}`
            ).join('\n')}
            
            ${report.recommendations && report.recommendations.length > 0 ? 
              `### Recommendations\n${report.recommendations.map(rec => `- ${rec}`).join('\n')}` : 
              ''
            }
            
            <details>
            <summary>View Full Report</summary>
            
            \`\`\`json
            ${JSON.stringify(report, null, 2)}
            \`\`\`
            </details>
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  create-fix-branches:
    needs: health-check
    runs-on: ubuntu-latest
    if: always() && needs.health-check.result != 'success'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Fix Branches
        run: |
          # Configure git
          git config --global user.name 'TRS Health Check Bot'
          git config --global user.email 'trs-bot@noreply.github.com'
          
          # Create branches for common issues
          branches=(
            "fix/workflow-issues"
            "fix/integration-failures" 
            "fix/missing-dependencies"
            "fix/deployment-config"
          )
          
          for branch in "${branches[@]}"; do
            if ! git ls-remote --heads origin "$branch" | grep -q "$branch"; then
              git checkout -b "$branch"
              git push origin "$branch" || echo "Branch $branch may already exist"
              git checkout main || git checkout master
            else
              echo "Branch $branch already exists"
            fi
          done
